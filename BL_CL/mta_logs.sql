BEGIN;
CREATE SCHEMA IF NOT EXISTS BL_CL;

DROP TABLE IF EXISTS BL_CL.MTA_LOGS;
CREATE TABLE IF NOT EXISTS BL_CL.MTA_LOGS 
(
    EXECUTION_DT        TIMESTAMP       NOT NULL,
    PROCEDURE_NAME      VARCHAR(255)    NOT NULL,
    PROCEDURE_SCHEMA    VARCHAR(255)    NOT NULL,
    LOG_MESSAGE         VARCHAR(255)    NOT NULL,
    ROWS_PROCESSED      BIGINT          NOT NULL,
    ROWS_INSERTED       BIGINT          NOT NULL,
    ROWS_UPDATED        BIGINT          NOT NULL,
    ERROR_CODE          VARCHAR(255)    NOT NULL,
    ERROR_MESSAGE       VARCHAR(255)    NOT NULL
);

DROP PROCEDURE IF EXISTS BL_CL.SP_MTA_INSERT_LOG;
CREATE OR REPLACE PROCEDURE BL_CL.SP_MTA_INSERT_LOG(IN P_PROCEDURE_NAME VARCHAR, IN P_PROCEDURE_SCHEMA VARCHAR, IN P_LOG_MESSAGE VARCHAR, IN P_ROWS_PROCESSED BIGINT, IN P_ROWS_INSERTED BIGINT, IN P_ROWS_UPDATED BIGINT, IN P_ERROR_CODE VARCHAR, IN P_ERROR_MESSAGE VARCHAR)
LANGUAGE PLPGSQL
AS $$
BEGIN
    INSERT INTO BL_CL.MTA_LOGS
    VALUES      (CURRENT_TIMESTAMP,
                P_PROCEDURE_NAME,
                P_PROCEDURE_SCHEMA,
                P_LOG_MESSAGE,
                P_ROWS_PROCESSED,
                P_ROWS_INSERTED,
                P_ROWS_UPDATED,
                P_ERROR_CODE,
                P_ERROR_MESSAGE);
EXCEPTION WHEN OTHERS THEN
    RAISE EXCEPTION 'ERROR INSERTING LOG (%): %',  UPPER(SQLSTATE), UPPER(SQLERRM);
END;
$$;
COMMIT;